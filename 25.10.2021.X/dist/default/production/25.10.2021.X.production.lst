

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 25 10:04:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 05/05/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F45K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000600                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _seg_char
    63  000600  3F                 	db	63
    64  000601  06                 	db	6
    65  000602  5B                 	db	91
    66  000603  4F                 	db	79
    67  000604  66                 	db	102
    68  000605  6D                 	db	109
    69  000606  7D                 	db	125
    70  000607  07                 	db	7
    71  000608  7F                 	db	127
    72  000609  6F                 	db	111
    73  00060A  39                 	db	57
    74  0000                     _ANSELE	set	3900
    75  0000                     _ANSELD	set	3899
    76  0000                     _ANSELA	set	3896
    77  0000                     _TMR0	set	4054
    78  0000                     _ADRESL	set	4035
    79  0000                     _ADRESH	set	4036
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _ADCON1	set	4033
    82  0000                     _ADCON2	set	4032
    83  0000                     _T0CON	set	4053
    84  0000                     _TRISE	set	3990
    85  0000                     _PORTD	set	3971
    86  0000                     _TRISD	set	3989
    87  0000                     _PORTA	set	3968
    88  0000                     _TRISA	set	3986
    89  0000                     _TMR0IF	set	32658
    90  0000                     _GIE	set	32663
    91  0000                     _PEIE	set	32662
    92  0000                     _TMR0IE	set	32661
    93  0000                     _GODONE	set	32273
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98  0005A4                     __pcinit:
    99                           	callstack 0
   100  0005A4                     start_initialization:
   101                           	callstack 0
   102  0005A4                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (11 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107  0005A4  0E00               	movlw	low __pidataCOMRAM
   108  0005A6  6EF6               	movwf	tblptrl,c
   109  0005A8  0E06               	movlw	high __pidataCOMRAM
   110  0005AA  6EF7               	movwf	tblptrh,c
   111  0005AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112  0005AE  6EF8               	movwf	tblptru,c
   113  0005B0  EE00  F042         	lfsr	0,__pdataCOMRAM
   114  0005B4  EE10 F00B          	lfsr	1,11
   115  0005B8                     copy_data0:
   116  0005B8  0009               	tblrd		*+
   117  0005BA  CFF5 FFEE          	movff	tablat,postinc0
   118  0005BE  50E5               	movf	postdec1,w,c
   119  0005C0  50E1               	movf	fsr1l,w,c
   120  0005C2  E1FA               	bnz	copy_data0
   121                           
   122                           ; Clear objects allocated to COMRAM (15 bytes)
   123  0005C4  EE00  F033         	lfsr	0,__pbssCOMRAM
   124  0005C8  0E0F               	movlw	15
   125  0005CA                     clear_0:
   126  0005CA  6AEE               	clrf	postinc0,c
   127  0005CC  06E8               	decf	wreg,f,c
   128  0005CE  E1FD               	bnz	clear_0
   129  0005D0                     end_of_initialization:
   130                           	callstack 0
   131  0005D0                     __end_of__initialization:
   132                           	callstack 0
   133  0005D0  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   134  0005D2  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   135  0005D4  0100               	movlb	0
   136  0005D6  EF6C  F000         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMRAM
   139  000033                     __pbssCOMRAM:
   140                           	callstack 0
   141  000033                     _temp:
   142                           	callstack 0
   143  000033                     	ds	4
   144  000037                     _digits:
   145                           	callstack 0
   146  000037                     	ds	4
   147  00003B                     _cnt2:
   148                           	callstack 0
   149  00003B                     	ds	2
   150  00003D                     _cnt:
   151                           	callstack 0
   152  00003D                     	ds	2
   153  00003F                     _analog:
   154                           	callstack 0
   155  00003F                     	ds	2
   156  000041                     _dig_cnt:
   157                           	callstack 0
   158  000041                     	ds	1
   159                           
   160                           	psect	dataCOMRAM
   161  000042                     __pdataCOMRAM:
   162                           	callstack 0
   163  000042                     _seg_char:
   164                           	callstack 0
   165  000042                     	ds	11
   166                           
   167                           	psect	cstackCOMRAM
   168  000001                     __pcstackCOMRAM:
   169                           	callstack 0
   170  000001                     ??_isr:
   171                           
   172                           ; 1 bytes @ 0x0
   173  000001                     	ds	7
   174  000008                     ?___wmul:
   175                           	callstack 0
   176  000008                     ?___lmul:
   177                           	callstack 0
   178  000008                     ?___llmod:
   179                           	callstack 0
   180  000008                     ___wmul@multiplier:
   181                           	callstack 0
   182  000008                     ___lmul@multiplier:
   183                           	callstack 0
   184  000008                     ___llmod@dividend:
   185                           	callstack 0
   186                           
   187                           ; 4 bytes @ 0x7
   188  000008                     	ds	2
   189  00000A                     ___wmul@multiplicand:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0x9
   193  00000A                     	ds	2
   194  00000C                     ___wmul@product:
   195                           	callstack 0
   196  00000C                     ___lmul@multiplicand:
   197                           	callstack 0
   198  00000C                     ___llmod@divisor:
   199                           	callstack 0
   200                           
   201                           ; 4 bytes @ 0xB
   202  00000C                     	ds	2
   203  00000E                     ?___lldiv:
   204                           	callstack 0
   205  00000E                     ___lldiv@dividend:
   206                           	callstack 0
   207                           
   208                           ; 4 bytes @ 0xD
   209  00000E                     	ds	2
   210  000010                     ___llmod@counter:
   211                           	callstack 0
   212  000010                     ___lmul@product:
   213                           	callstack 0
   214                           
   215                           ; 4 bytes @ 0xF
   216  000010                     	ds	2
   217  000012                     ___lldiv@divisor:
   218                           	callstack 0
   219                           
   220                           ; 4 bytes @ 0x11
   221  000012                     	ds	2
   222  000014                     ?___aldiv:
   223                           	callstack 0
   224  000014                     ___aldiv@dividend:
   225                           	callstack 0
   226                           
   227                           ; 4 bytes @ 0x13
   228  000014                     	ds	2
   229  000016                     ___lldiv@quotient:
   230                           	callstack 0
   231                           
   232                           ; 4 bytes @ 0x15
   233  000016                     	ds	2
   234  000018                     ___aldiv@divisor:
   235                           	callstack 0
   236                           
   237                           ; 4 bytes @ 0x17
   238  000018                     	ds	2
   239  00001A                     ___lldiv@counter:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x19
   243  00001A                     	ds	2
   244  00001C                     ___aldiv@counter:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x1B
   248  00001C                     	ds	1
   249  00001D                     ___aldiv@sign:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x1C
   253  00001D                     	ds	1
   254  00001E                     ___aldiv@quotient:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0x1D
   258  00001E                     	ds	4
   259  000022                     
   260                           ; 2 bytes @ 0x21
   261  000022                     	ds	2
   262  000024                     
   263                           ; 3 bytes @ 0x23
   264  000024                     	ds	3
   265  000027                     ??_main:
   266                           
   267                           ; 1 bytes @ 0x26
   268  000027                     	ds	12
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 25 in file "newmain.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;  argc            2   33[COMRAM] int 
   278 ;;  argv            3   35[COMRAM] PTR PTR unsigned char 
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  2   33[COMRAM] int 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   290 ;;      Params:         5       0       0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0
   292 ;;      Temps:         12       0       0       0       0       0       0
   293 ;;      Totals:        17       0       0       0       0       0       0
   294 ;;Total ram usage:       17 bytes
   295 ;; Hardware stack levels required when called: 2
   296 ;; This function calls:
   297 ;;		___aldiv
   298 ;;		___lldiv
   299 ;;		___llmod
   300 ;;		___lmul
   301 ;;		___wmul
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308  0000D8                     __ptext0:
   309                           	callstack 0
   310  0000D8                     _main:
   311                           	callstack 29
   312  0000D8                     
   313                           ;newmain.c: 27:     GODONE = 1;
   314  0000D8  0E00               	movlw	0
   315  0000DA  010F               	movlb	15	; () banked
   316  0000DC  6F38               	movwf	56,b	;volatile
   317                           
   318                           ;newmain.c: 28: 
   319  0000DE  0EF0               	movlw	240
   320  0000E0  6E92               	movwf	146,c	;volatile
   321                           
   322                           ;newmain.c: 29:     TMR0IE = 1;
   323  0000E2  0E00               	movlw	0
   324  0000E4  6E80               	movwf	128,c	;volatile
   325                           
   326                           ;newmain.c: 31:     GIE = 1;
   327  0000E6  0E00               	movlw	0
   328  0000E8  6F3B               	movwf	59,b	;volatile
   329                           
   330                           ;newmain.c: 32: 
   331  0000EA  0E00               	movlw	0
   332  0000EC  6E95               	movwf	149,c	;volatile
   333                           
   334                           ;newmain.c: 33: 
   335  0000EE  0E00               	movlw	0
   336  0000F0  6E83               	movwf	131,c	;volatile
   337                           
   338                           ;newmain.c: 35:         if (!GODONE) {
   339  0000F2  0E02               	movlw	2
   340  0000F4  6F3C               	movwf	60,b	;volatile
   341                           
   342                           ;newmain.c: 36:             analog = (ADRESH & 0x03)*256 + ADRESL;
   343  0000F6  0E7F               	movlw	127
   344  0000F8  6E96               	movwf	150,c	;volatile
   345                           
   346                           ;newmain.c: 38:             temp = (50000 * analog) / 1023;
   347  0000FA  0EC3               	movlw	195
   348  0000FC  6ED5               	movwf	213,c	;volatile
   349                           
   350                           ;newmain.c: 40:                 temp = 9999;
   351  0000FE  0EA1               	movlw	161
   352  000100  6EC0               	movwf	192,c	;volatile
   353                           
   354                           ;newmain.c: 41:             }
   355  000102  0E00               	movlw	0
   356  000104  6EC1               	movwf	193,c	;volatile
   357                           
   358                           ;newmain.c: 42:         }
   359  000106  50C2               	movf	194,w,c	;volatile
   360  000108  0B83               	andlw	-125
   361  00010A  0918               	iorlw	24
   362  00010C  6EC2               	movwf	194,c	;volatile
   363  00010E                     
   364                           ; BSR set to: 15
   365                           ;newmain.c: 43: 
   366  00010E  80C2               	bsf	194,0,c	;volatile
   367  000110                     
   368                           ; BSR set to: 15
   369                           ;newmain.c: 44: 
   370  000110  82C2               	bsf	4034,1,c	;volatile
   371  000112                     
   372                           ; BSR set to: 15
   373                           ;newmain.c: 46: 
   374  000112  8AF2               	bsf	4082,5,c	;volatile
   375  000114                     
   376                           ; BSR set to: 15
   377                           ;newmain.c: 47:         digits[3] = temp / 1000;
   378  000114  8CF2               	bsf	4082,6,c	;volatile
   379  000116                     
   380                           ; BSR set to: 15
   381                           ;newmain.c: 48:         digits[2] = (temp - digits[3]*1000) / 100;
   382  000116  8EF2               	bsf	4082,7,c	;volatile
   383  000118                     l1007:
   384                           
   385                           ;newmain.c: 52: 
   386  000118  B2C2               	btfsc	4034,1,c	;volatile
   387  00011A  EF91  F000         	goto	u371
   388  00011E  EF93  F000         	goto	u370
   389  000122                     u371:
   390  000122  EFE1  F000         	goto	l1019
   391  000126                     u370:
   392  000126                     
   393                           ;newmain.c: 53: 
   394  000126  CFC4 F027          	movff	4036,??_main	;volatile
   395  00012A  0E03               	movlw	3
   396  00012C  1627               	andwf	??_main^0,f,c
   397  00012E  5027               	movf	??_main^0,w,c
   398  000130  6E29               	movwf	(??_main+2)^0,c
   399  000132  6A28               	clrf	(??_main+1)^0,c
   400  000134  50C3               	movf	195,w,c	;volatile
   401  000136  2428               	addwf	(??_main+1)^0,w,c
   402  000138  6E3F               	movwf	_analog^0,c
   403  00013A  0E00               	movlw	0
   404  00013C  2029               	addwfc	(??_main+2)^0,w,c
   405  00013E  6E40               	movwf	(_analog+1)^0,c
   406  000140                     
   407                           ;newmain.c: 54: 
   408  000140  82C2               	bsf	4034,1,c	;volatile
   409  000142                     
   410                           ;newmain.c: 55:     }
   411  000142  C03F  F008         	movff	_analog,___lmul@multiplier
   412  000146  C040  F009         	movff	_analog+1,___lmul@multiplier+1
   413  00014A  6A0A               	clrf	(___lmul@multiplier+2)^0,c
   414  00014C  6A0B               	clrf	(___lmul@multiplier+3)^0,c
   415  00014E  0E50               	movlw	80
   416  000150  6E0C               	movwf	___lmul@multiplicand^0,c
   417  000152  0EC3               	movlw	195
   418  000154  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
   419  000156  0E00               	movlw	0
   420  000158  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
   421  00015A  0E00               	movlw	0
   422  00015C  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
   423  00015E  EC9D  F002         	call	___lmul	;wreg free
   424  000162  C008  F014         	movff	?___lmul,___aldiv@dividend
   425  000166  C009  F015         	movff	?___lmul+1,___aldiv@dividend+1
   426  00016A  C00A  F016         	movff	?___lmul+2,___aldiv@dividend+2
   427  00016E  C00B  F017         	movff	?___lmul+3,___aldiv@dividend+3
   428  000172  0EFF               	movlw	255
   429  000174  6E18               	movwf	___aldiv@divisor^0,c
   430  000176  0E03               	movlw	3
   431  000178  6E19               	movwf	(___aldiv@divisor+1)^0,c
   432  00017A  0E00               	movlw	0
   433  00017C  6E1A               	movwf	(___aldiv@divisor+2)^0,c
   434  00017E  0E00               	movlw	0
   435  000180  6E1B               	movwf	(___aldiv@divisor+3)^0,c
   436  000182  EC81  F001         	call	___aldiv	;wreg free
   437  000186  C014  F033         	movff	?___aldiv,_temp
   438  00018A  C015  F034         	movff	?___aldiv+1,_temp+1
   439  00018E  C016  F035         	movff	?___aldiv+2,_temp+2
   440  000192  C017  F036         	movff	?___aldiv+3,_temp+3
   441  000196                     
   442                           ;newmain.c: 56: 
   443  000196  5036               	movf	(_temp+3)^0,w,c
   444  000198  1035               	iorwf	(_temp+2)^0,w,c
   445  00019A  E10B               	bnz	u380
   446  00019C  0E10               	movlw	16
   447  00019E  5C33               	subwf	_temp^0,w,c
   448  0001A0  0E27               	movlw	39
   449  0001A2  5834               	subwfb	(_temp+1)^0,w,c
   450  0001A4  A0D8               	btfss	status,0,c
   451  0001A6  EFD7  F000         	goto	u381
   452  0001AA  EFD9  F000         	goto	u380
   453  0001AE                     u381:
   454  0001AE  EFE1  F000         	goto	l1019
   455  0001B2                     u380:
   456  0001B2                     
   457                           ;newmain.c: 57:     return (0);
   458  0001B2  0E0F               	movlw	15
   459  0001B4  6E33               	movwf	_temp^0,c
   460  0001B6  0E27               	movlw	39
   461  0001B8  6E34               	movwf	(_temp+1)^0,c
   462  0001BA  0E00               	movlw	0
   463  0001BC  6E35               	movwf	(_temp+2)^0,c
   464  0001BE  0E00               	movlw	0
   465  0001C0  6E36               	movwf	(_temp+3)^0,c
   466  0001C2                     l1019:
   467                           
   468                           ;newmain.c: 64:         PORTA = 0x00;
   469  0001C2  C033  F00E         	movff	_temp,___lldiv@dividend
   470  0001C6  C034  F00F         	movff	_temp+1,___lldiv@dividend+1
   471  0001CA  C035  F010         	movff	_temp+2,___lldiv@dividend+2
   472  0001CE  C036  F011         	movff	_temp+3,___lldiv@dividend+3
   473  0001D2  0EE8               	movlw	232
   474  0001D4  6E12               	movwf	___lldiv@divisor^0,c
   475  0001D6  0E03               	movlw	3
   476  0001D8  6E13               	movwf	(___lldiv@divisor+1)^0,c
   477  0001DA  0E00               	movlw	0
   478  0001DC  6E14               	movwf	(___lldiv@divisor+2)^0,c
   479  0001DE  0E00               	movlw	0
   480  0001E0  6E15               	movwf	(___lldiv@divisor+3)^0,c
   481  0001E2  EC07  F002         	call	___lldiv	;wreg free
   482  0001E6  500E               	movf	?___lldiv^0,w,c
   483  0001E8  6E3A               	movwf	(_digits+3)^0,c
   484  0001EA                     
   485                           ;newmain.c: 65:         if (dig_cnt == 0) {
   486  0001EA  C03A  F008         	movff	_digits+3,___wmul@multiplier
   487  0001EE  6A09               	clrf	(___wmul@multiplier+1)^0,c
   488  0001F0  0E03               	movlw	3
   489  0001F2  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   490  0001F4  0EE8               	movlw	232
   491  0001F6  6E0A               	movwf	___wmul@multiplicand^0,c
   492  0001F8  ECED  F002         	call	___wmul	;wreg free
   493  0001FC  C008  F027         	movff	?___wmul,??_main
   494  000200  C009  F028         	movff	?___wmul+1,??_main+1
   495  000204  0E00               	movlw	0
   496  000206  BE28               	btfsc	(??_main+1)^0,7,c
   497  000208  0EFF               	movlw	255
   498  00020A  6E29               	movwf	(??_main+2)^0,c
   499  00020C  6E2A               	movwf	(??_main+3)^0,c
   500  00020E  5027               	movf	??_main^0,w,c
   501  000210  5C33               	subwf	_temp^0,w,c
   502  000212  6E0E               	movwf	___lldiv@dividend^0,c
   503  000214  5028               	movf	(??_main+1)^0,w,c
   504  000216  5834               	subwfb	(_temp+1)^0,w,c
   505  000218  6E0F               	movwf	(___lldiv@dividend+1)^0,c
   506  00021A  5029               	movf	(??_main+2)^0,w,c
   507  00021C  5835               	subwfb	(_temp+2)^0,w,c
   508  00021E  6E10               	movwf	(___lldiv@dividend+2)^0,c
   509  000220  502A               	movf	(??_main+3)^0,w,c
   510  000222  5836               	subwfb	(_temp+3)^0,w,c
   511  000224  6E11               	movwf	(___lldiv@dividend+3)^0,c
   512  000226  0E64               	movlw	100
   513  000228  6E12               	movwf	___lldiv@divisor^0,c
   514  00022A  0E00               	movlw	0
   515  00022C  6E13               	movwf	(___lldiv@divisor+1)^0,c
   516  00022E  0E00               	movlw	0
   517  000230  6E14               	movwf	(___lldiv@divisor+2)^0,c
   518  000232  0E00               	movlw	0
   519  000234  6E15               	movwf	(___lldiv@divisor+3)^0,c
   520  000236  EC07  F002         	call	___lldiv	;wreg free
   521  00023A  500E               	movf	?___lldiv^0,w,c
   522  00023C  6E39               	movwf	(_digits+2)^0,c
   523  00023E                     
   524                           ;newmain.c: 66:             PORTD = seg_char[10];
   525  00023E  5039               	movf	(_digits+2)^0,w,c
   526  000240  0D64               	mullw	100
   527  000242  CFF3 F027          	movff	prodl,??_main
   528  000246  CFF4 F028          	movff	prodh,??_main+1
   529  00024A  0E00               	movlw	0
   530  00024C  BE28               	btfsc	(??_main+1)^0,7,c
   531  00024E  0EFF               	movlw	255
   532  000250  6E29               	movwf	(??_main+2)^0,c
   533  000252  6E2A               	movwf	(??_main+3)^0,c
   534  000254  C03A  F008         	movff	_digits+3,___wmul@multiplier
   535  000258  6A09               	clrf	(___wmul@multiplier+1)^0,c
   536  00025A  0E03               	movlw	3
   537  00025C  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   538  00025E  0EE8               	movlw	232
   539  000260  6E0A               	movwf	___wmul@multiplicand^0,c
   540  000262  ECED  F002         	call	___wmul	;wreg free
   541  000266  C008  F02B         	movff	?___wmul,??_main+4
   542  00026A  C009  F02C         	movff	?___wmul+1,??_main+5
   543  00026E  0E00               	movlw	0
   544  000270  BE2C               	btfsc	(??_main+5)^0,7,c
   545  000272  0EFF               	movlw	255
   546  000274  6E2D               	movwf	(??_main+6)^0,c
   547  000276  6E2E               	movwf	(??_main+7)^0,c
   548  000278  1E2B               	comf	(??_main+4)^0,f,c
   549  00027A  1E2C               	comf	(??_main+5)^0,f,c
   550  00027C  1E2D               	comf	(??_main+6)^0,f,c
   551  00027E  1E2E               	comf	(??_main+7)^0,f,c
   552  000280  2A2B               	incf	(??_main+4)^0,f,c
   553  000282  0E00               	movlw	0
   554  000284  222C               	addwfc	(??_main+5)^0,f,c
   555  000286  222D               	addwfc	(??_main+6)^0,f,c
   556  000288  222E               	addwfc	(??_main+7)^0,f,c
   557  00028A  5027               	movf	??_main^0,w,c
   558  00028C  5C2B               	subwf	(??_main+4)^0,w,c
   559  00028E  6E2F               	movwf	(??_main+8)^0,c
   560  000290  5028               	movf	(??_main+1)^0,w,c
   561  000292  582C               	subwfb	(??_main+5)^0,w,c
   562  000294  6E30               	movwf	(??_main+9)^0,c
   563  000296  5029               	movf	(??_main+2)^0,w,c
   564  000298  582D               	subwfb	(??_main+6)^0,w,c
   565  00029A  6E31               	movwf	(??_main+10)^0,c
   566  00029C  502A               	movf	(??_main+3)^0,w,c
   567  00029E  582E               	subwfb	(??_main+7)^0,w,c
   568  0002A0  6E32               	movwf	(??_main+11)^0,c
   569  0002A2  5033               	movf	_temp^0,w,c
   570  0002A4  242F               	addwf	(??_main+8)^0,w,c
   571  0002A6  6E0E               	movwf	___lldiv@dividend^0,c
   572  0002A8  5034               	movf	(_temp+1)^0,w,c
   573  0002AA  2030               	addwfc	(??_main+9)^0,w,c
   574  0002AC  6E0F               	movwf	(___lldiv@dividend+1)^0,c
   575  0002AE  5035               	movf	(_temp+2)^0,w,c
   576  0002B0  2031               	addwfc	(??_main+10)^0,w,c
   577  0002B2  6E10               	movwf	(___lldiv@dividend+2)^0,c
   578  0002B4  5036               	movf	(_temp+3)^0,w,c
   579  0002B6  2032               	addwfc	(??_main+11)^0,w,c
   580  0002B8  6E11               	movwf	(___lldiv@dividend+3)^0,c
   581  0002BA  0E0A               	movlw	10
   582  0002BC  6E12               	movwf	___lldiv@divisor^0,c
   583  0002BE  0E00               	movlw	0
   584  0002C0  6E13               	movwf	(___lldiv@divisor+1)^0,c
   585  0002C2  0E00               	movlw	0
   586  0002C4  6E14               	movwf	(___lldiv@divisor+2)^0,c
   587  0002C6  0E00               	movlw	0
   588  0002C8  6E15               	movwf	(___lldiv@divisor+3)^0,c
   589  0002CA  EC07  F002         	call	___lldiv	;wreg free
   590  0002CE  500E               	movf	?___lldiv^0,w,c
   591  0002D0  6E38               	movwf	(_digits+1)^0,c
   592  0002D2                     
   593                           ;newmain.c: 67:         } else {
   594  0002D2  C033  F008         	movff	_temp,___llmod@dividend
   595  0002D6  C034  F009         	movff	_temp+1,___llmod@dividend+1
   596  0002DA  C035  F00A         	movff	_temp+2,___llmod@dividend+2
   597  0002DE  C036  F00B         	movff	_temp+3,___llmod@dividend+3
   598  0002E2  0E0A               	movlw	10
   599  0002E4  6E0C               	movwf	___llmod@divisor^0,c
   600  0002E6  0E00               	movlw	0
   601  0002E8  6E0D               	movwf	(___llmod@divisor+1)^0,c
   602  0002EA  0E00               	movlw	0
   603  0002EC  6E0E               	movwf	(___llmod@divisor+2)^0,c
   604  0002EE  0E00               	movlw	0
   605  0002F0  6E0F               	movwf	(___llmod@divisor+3)^0,c
   606  0002F2  EC59  F002         	call	___llmod	;wreg free
   607  0002F6  5008               	movf	?___llmod^0,w,c
   608  0002F8  6E37               	movwf	_digits^0,c
   609  0002FA  EF8C  F000         	goto	l1007
   610  0002FE  EF6A  F000         	goto	start
   611  000302                     __end_of_main:
   612                           	callstack 0
   613                           
   614 ;; *************** function ___wmul *****************
   615 ;; Defined at:
   616 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  multiplier      2    7[COMRAM] unsigned int 
   619 ;;  multiplicand    2    9[COMRAM] unsigned int 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  product         2   11[COMRAM] unsigned int 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  2    7[COMRAM] unsigned int 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, prodl, prodh
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   631 ;;      Params:         4       0       0       0       0       0       0
   632 ;;      Locals:         2       0       0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0
   634 ;;      Totals:         6       0       0       0       0       0       0
   635 ;;Total ram usage:        6 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text1
   646  0005DA                     __ptext1:
   647                           	callstack 0
   648  0005DA                     ___wmul:
   649                           	callstack 29
   650  0005DA  5008               	movf	___wmul@multiplier^0,w,c
   651  0005DC  020A               	mulwf	___wmul@multiplicand^0,c
   652  0005DE  CFF3 F00C          	movff	prodl,___wmul@product
   653  0005E2  CFF4 F00D          	movff	prodh,___wmul@product+1
   654  0005E6  5008               	movf	___wmul@multiplier^0,w,c
   655  0005E8  020B               	mulwf	(___wmul@multiplicand+1)^0,c
   656  0005EA  50F3               	movf	243,w,c
   657  0005EC  260D               	addwf	(___wmul@product+1)^0,f,c
   658  0005EE  5009               	movf	(___wmul@multiplier+1)^0,w,c
   659  0005F0  020A               	mulwf	___wmul@multiplicand^0,c
   660  0005F2  50F3               	movf	243,w,c
   661  0005F4  260D               	addwf	(___wmul@product+1)^0,f,c
   662  0005F6  C00C  F008         	movff	___wmul@product,?___wmul
   663  0005FA  C00D  F009         	movff	___wmul@product+1,?___wmul+1
   664  0005FE  0012               	return		;funcret
   665  000600                     __end_of___wmul:
   666                           	callstack 0
   667                           
   668 ;; *************** function ___lmul *****************
   669 ;; Defined at:
   670 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  multiplier      4    7[COMRAM] unsigned long 
   673 ;;  multiplicand    4   11[COMRAM] unsigned long 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  product         4   15[COMRAM] unsigned long 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  4    7[COMRAM] unsigned long 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         8       0       0       0       0       0       0
   686 ;;      Locals:         4       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0
   688 ;;      Totals:        12       0       0       0       0       0       0
   689 ;;Total ram usage:       12 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text2
   700  00053A                     __ptext2:
   701                           	callstack 0
   702  00053A                     ___lmul:
   703                           	callstack 29
   704  00053A  0E00               	movlw	0
   705  00053C  6E10               	movwf	___lmul@product^0,c
   706  00053E  0E00               	movlw	0
   707  000540  6E11               	movwf	(___lmul@product+1)^0,c
   708  000542  0E00               	movlw	0
   709  000544  6E12               	movwf	(___lmul@product+2)^0,c
   710  000546  0E00               	movlw	0
   711  000548  6E13               	movwf	(___lmul@product+3)^0,c
   712  00054A                     l905:
   713  00054A  A008               	btfss	___lmul@multiplier^0,0,c
   714  00054C  EFAA  F002         	goto	u231
   715  000550  EFAC  F002         	goto	u230
   716  000554                     u231:
   717  000554  EFB4  F002         	goto	l909
   718  000558                     u230:
   719  000558  500C               	movf	___lmul@multiplicand^0,w,c
   720  00055A  2610               	addwf	___lmul@product^0,f,c
   721  00055C  500D               	movf	(___lmul@multiplicand+1)^0,w,c
   722  00055E  2211               	addwfc	(___lmul@product+1)^0,f,c
   723  000560  500E               	movf	(___lmul@multiplicand+2)^0,w,c
   724  000562  2212               	addwfc	(___lmul@product+2)^0,f,c
   725  000564  500F               	movf	(___lmul@multiplicand+3)^0,w,c
   726  000566  2213               	addwfc	(___lmul@product+3)^0,f,c
   727  000568                     l909:
   728  000568  90D8               	bcf	status,0,c
   729  00056A  360C               	rlcf	___lmul@multiplicand^0,f,c
   730  00056C  360D               	rlcf	(___lmul@multiplicand+1)^0,f,c
   731  00056E  360E               	rlcf	(___lmul@multiplicand+2)^0,f,c
   732  000570  360F               	rlcf	(___lmul@multiplicand+3)^0,f,c
   733  000572  90D8               	bcf	status,0,c
   734  000574  320B               	rrcf	(___lmul@multiplier+3)^0,f,c
   735  000576  320A               	rrcf	(___lmul@multiplier+2)^0,f,c
   736  000578  3209               	rrcf	(___lmul@multiplier+1)^0,f,c
   737  00057A  3208               	rrcf	___lmul@multiplier^0,f,c
   738  00057C  5008               	movf	___lmul@multiplier^0,w,c
   739  00057E  1009               	iorwf	(___lmul@multiplier+1)^0,w,c
   740  000580  100A               	iorwf	(___lmul@multiplier+2)^0,w,c
   741  000582  100B               	iorwf	(___lmul@multiplier+3)^0,w,c
   742  000584  A4D8               	btfss	status,2,c
   743  000586  EFC7  F002         	goto	u241
   744  00058A  EFC9  F002         	goto	u240
   745  00058E                     u241:
   746  00058E  EFA5  F002         	goto	l905
   747  000592                     u240:
   748  000592  C010  F008         	movff	___lmul@product,?___lmul
   749  000596  C011  F009         	movff	___lmul@product+1,?___lmul+1
   750  00059A  C012  F00A         	movff	___lmul@product+2,?___lmul+2
   751  00059E  C013  F00B         	movff	___lmul@product+3,?___lmul+3
   752  0005A2  0012               	return		;funcret
   753  0005A4                     __end_of___lmul:
   754                           	callstack 0
   755                           
   756 ;; *************** function ___llmod *****************
   757 ;; Defined at:
   758 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  dividend        4    7[COMRAM] unsigned long 
   761 ;;  divisor         4   11[COMRAM] unsigned long 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  counter         1   15[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  4    7[COMRAM] unsigned long 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   773 ;;      Params:         8       0       0       0       0       0       0
   774 ;;      Locals:         1       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0
   776 ;;      Totals:         9       0       0       0       0       0       0
   777 ;;Total ram usage:        9 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text3
   788  0004B2                     __ptext3:
   789                           	callstack 0
   790  0004B2                     ___llmod:
   791                           	callstack 29
   792  0004B2  500C               	movf	___llmod@divisor^0,w,c
   793  0004B4  100D               	iorwf	(___llmod@divisor+1)^0,w,c
   794  0004B6  100E               	iorwf	(___llmod@divisor+2)^0,w,c
   795  0004B8  100F               	iorwf	(___llmod@divisor+3)^0,w,c
   796  0004BA  B4D8               	btfsc	status,2,c
   797  0004BC  EF62  F002         	goto	u341
   798  0004C0  EF64  F002         	goto	u340
   799  0004C4                     u341:
   800  0004C4  EF94  F002         	goto	l496
   801  0004C8                     u340:
   802  0004C8  0E01               	movlw	1
   803  0004CA  6E10               	movwf	___llmod@counter^0,c
   804  0004CC  EF6E  F002         	goto	l985
   805  0004D0                     l983:
   806  0004D0  90D8               	bcf	status,0,c
   807  0004D2  360C               	rlcf	___llmod@divisor^0,f,c
   808  0004D4  360D               	rlcf	(___llmod@divisor+1)^0,f,c
   809  0004D6  360E               	rlcf	(___llmod@divisor+2)^0,f,c
   810  0004D8  360F               	rlcf	(___llmod@divisor+3)^0,f,c
   811  0004DA  2A10               	incf	___llmod@counter^0,f,c
   812  0004DC                     l985:
   813  0004DC  AE0F               	btfss	(___llmod@divisor+3)^0,7,c
   814  0004DE  EF73  F002         	goto	u351
   815  0004E2  EF75  F002         	goto	u350
   816  0004E6                     u351:
   817  0004E6  EF68  F002         	goto	l983
   818  0004EA                     u350:
   819  0004EA                     l987:
   820  0004EA  500C               	movf	___llmod@divisor^0,w,c
   821  0004EC  5C08               	subwf	___llmod@dividend^0,w,c
   822  0004EE  500D               	movf	(___llmod@divisor+1)^0,w,c
   823  0004F0  5809               	subwfb	(___llmod@dividend+1)^0,w,c
   824  0004F2  500E               	movf	(___llmod@divisor+2)^0,w,c
   825  0004F4  580A               	subwfb	(___llmod@dividend+2)^0,w,c
   826  0004F6  500F               	movf	(___llmod@divisor+3)^0,w,c
   827  0004F8  580B               	subwfb	(___llmod@dividend+3)^0,w,c
   828  0004FA  A0D8               	btfss	status,0,c
   829  0004FC  EF82  F002         	goto	u361
   830  000500  EF84  F002         	goto	u360
   831  000504                     u361:
   832  000504  EF8C  F002         	goto	l991
   833  000508                     u360:
   834  000508  500C               	movf	___llmod@divisor^0,w,c
   835  00050A  5E08               	subwf	___llmod@dividend^0,f,c
   836  00050C  500D               	movf	(___llmod@divisor+1)^0,w,c
   837  00050E  5A09               	subwfb	(___llmod@dividend+1)^0,f,c
   838  000510  500E               	movf	(___llmod@divisor+2)^0,w,c
   839  000512  5A0A               	subwfb	(___llmod@dividend+2)^0,f,c
   840  000514  500F               	movf	(___llmod@divisor+3)^0,w,c
   841  000516  5A0B               	subwfb	(___llmod@dividend+3)^0,f,c
   842  000518                     l991:
   843  000518  90D8               	bcf	status,0,c
   844  00051A  320F               	rrcf	(___llmod@divisor+3)^0,f,c
   845  00051C  320E               	rrcf	(___llmod@divisor+2)^0,f,c
   846  00051E  320D               	rrcf	(___llmod@divisor+1)^0,f,c
   847  000520  320C               	rrcf	___llmod@divisor^0,f,c
   848  000522  2E10               	decfsz	___llmod@counter^0,f,c
   849  000524  EF75  F002         	goto	l987
   850  000528                     l496:
   851  000528  C008  F008         	movff	___llmod@dividend,?___llmod
   852  00052C  C009  F009         	movff	___llmod@dividend+1,?___llmod+1
   853  000530  C00A  F00A         	movff	___llmod@dividend+2,?___llmod+2
   854  000534  C00B  F00B         	movff	___llmod@dividend+3,?___llmod+3
   855  000538  0012               	return		;funcret
   856  00053A                     __end_of___llmod:
   857                           	callstack 0
   858                           
   859 ;; *************** function ___lldiv *****************
   860 ;; Defined at:
   861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  dividend        4   13[COMRAM] unsigned long 
   864 ;;  divisor         4   17[COMRAM] unsigned long 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  quotient        4   21[COMRAM] unsigned long 
   867 ;;  counter         1   25[COMRAM] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  4   13[COMRAM] unsigned long 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   877 ;;      Params:         8       0       0       0       0       0       0
   878 ;;      Locals:         5       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0
   880 ;;      Totals:        13       0       0       0       0       0       0
   881 ;;Total ram usage:       13 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text4
   892  00040E                     __ptext4:
   893                           	callstack 0
   894  00040E                     ___lldiv:
   895                           	callstack 29
   896  00040E  0E00               	movlw	0
   897  000410  6E16               	movwf	___lldiv@quotient^0,c
   898  000412  0E00               	movlw	0
   899  000414  6E17               	movwf	(___lldiv@quotient+1)^0,c
   900  000416  0E00               	movlw	0
   901  000418  6E18               	movwf	(___lldiv@quotient+2)^0,c
   902  00041A  0E00               	movlw	0
   903  00041C  6E19               	movwf	(___lldiv@quotient+3)^0,c
   904  00041E  5012               	movf	___lldiv@divisor^0,w,c
   905  000420  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
   906  000422  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
   907  000424  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
   908  000426  B4D8               	btfsc	status,2,c
   909  000428  EF18  F002         	goto	u251
   910  00042C  EF1A  F002         	goto	u250
   911  000430                     u251:
   912  000430  EF50  F002         	goto	l103
   913  000434                     u250:
   914  000434  0E01               	movlw	1
   915  000436  6E1A               	movwf	___lldiv@counter^0,c
   916  000438  EF24  F002         	goto	l921
   917  00043C                     l919:
   918  00043C  90D8               	bcf	status,0,c
   919  00043E  3612               	rlcf	___lldiv@divisor^0,f,c
   920  000440  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
   921  000442  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
   922  000444  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
   923  000446  2A1A               	incf	___lldiv@counter^0,f,c
   924  000448                     l921:
   925  000448  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
   926  00044A  EF29  F002         	goto	u261
   927  00044E  EF2B  F002         	goto	u260
   928  000452                     u261:
   929  000452  EF1E  F002         	goto	l919
   930  000456                     u260:
   931  000456                     l923:
   932  000456  90D8               	bcf	status,0,c
   933  000458  3616               	rlcf	___lldiv@quotient^0,f,c
   934  00045A  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
   935  00045C  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
   936  00045E  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
   937  000460  5012               	movf	___lldiv@divisor^0,w,c
   938  000462  5C0E               	subwf	___lldiv@dividend^0,w,c
   939  000464  5013               	movf	(___lldiv@divisor+1)^0,w,c
   940  000466  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
   941  000468  5014               	movf	(___lldiv@divisor+2)^0,w,c
   942  00046A  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
   943  00046C  5015               	movf	(___lldiv@divisor+3)^0,w,c
   944  00046E  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
   945  000470  A0D8               	btfss	status,0,c
   946  000472  EF3D  F002         	goto	u271
   947  000476  EF3F  F002         	goto	u270
   948  00047A                     u271:
   949  00047A  EF48  F002         	goto	l931
   950  00047E                     u270:
   951  00047E  5012               	movf	___lldiv@divisor^0,w,c
   952  000480  5E0E               	subwf	___lldiv@dividend^0,f,c
   953  000482  5013               	movf	(___lldiv@divisor+1)^0,w,c
   954  000484  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
   955  000486  5014               	movf	(___lldiv@divisor+2)^0,w,c
   956  000488  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
   957  00048A  5015               	movf	(___lldiv@divisor+3)^0,w,c
   958  00048C  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
   959  00048E  8016               	bsf	___lldiv@quotient^0,0,c
   960  000490                     l931:
   961  000490  90D8               	bcf	status,0,c
   962  000492  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
   963  000494  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
   964  000496  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
   965  000498  3212               	rrcf	___lldiv@divisor^0,f,c
   966  00049A  2E1A               	decfsz	___lldiv@counter^0,f,c
   967  00049C  EF2B  F002         	goto	l923
   968  0004A0                     l103:
   969  0004A0  C016  F00E         	movff	___lldiv@quotient,?___lldiv
   970  0004A4  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
   971  0004A8  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
   972  0004AC  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
   973  0004B0  0012               	return		;funcret
   974  0004B2                     __end_of___lldiv:
   975                           	callstack 0
   976                           
   977 ;; *************** function ___aldiv *****************
   978 ;; Defined at:
   979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  dividend        4   19[COMRAM] long 
   982 ;;  divisor         4   23[COMRAM] long 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  quotient        4   29[COMRAM] long 
   985 ;;  sign            1   28[COMRAM] unsigned char 
   986 ;;  counter         1   27[COMRAM] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  4   19[COMRAM] long 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         8       0       0       0       0       0       0
   997 ;;      Locals:         6       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0
   999 ;;      Totals:        14       0       0       0       0       0       0
  1000 ;;Total ram usage:       14 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text5
  1011  000302                     __ptext5:
  1012                           	callstack 0
  1013  000302                     ___aldiv:
  1014                           	callstack 29
  1015  000302  0E00               	movlw	0
  1016  000304  6E1D               	movwf	___aldiv@sign^0,c
  1017  000306  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  1018  000308  EF8A  F001         	goto	u280
  1019  00030C  EF88  F001         	goto	u281
  1020  000310                     u281:
  1021  000310  EF94  F001         	goto	l943
  1022  000314                     u280:
  1023  000314  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  1024  000316  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  1025  000318  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  1026  00031A  6C18               	negf	___aldiv@divisor^0,c
  1027  00031C  0E00               	movlw	0
  1028  00031E  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  1029  000320  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  1030  000322  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  1031  000324  0E01               	movlw	1
  1032  000326  6E1D               	movwf	___aldiv@sign^0,c
  1033  000328                     l943:
  1034  000328  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  1035  00032A  EF9B  F001         	goto	u290
  1036  00032E  EF99  F001         	goto	u291
  1037  000332                     u291:
  1038  000332  EFA5  F001         	goto	l949
  1039  000336                     u290:
  1040  000336  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  1041  000338  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  1042  00033A  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  1043  00033C  6C14               	negf	___aldiv@dividend^0,c
  1044  00033E  0E00               	movlw	0
  1045  000340  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  1046  000342  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  1047  000344  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  1048  000346  0E01               	movlw	1
  1049  000348  1A1D               	xorwf	___aldiv@sign^0,f,c
  1050  00034A                     l949:
  1051  00034A  0E00               	movlw	0
  1052  00034C  6E1E               	movwf	___aldiv@quotient^0,c
  1053  00034E  0E00               	movlw	0
  1054  000350  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  1055  000352  0E00               	movlw	0
  1056  000354  6E20               	movwf	(___aldiv@quotient+2)^0,c
  1057  000356  0E00               	movlw	0
  1058  000358  6E21               	movwf	(___aldiv@quotient+3)^0,c
  1059  00035A  5018               	movf	___aldiv@divisor^0,w,c
  1060  00035C  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  1061  00035E  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  1062  000360  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  1063  000362  B4D8               	btfsc	status,2,c
  1064  000364  EFB6  F001         	goto	u301
  1065  000368  EFB8  F001         	goto	u300
  1066  00036C                     u301:
  1067  00036C  EFEE  F001         	goto	l971
  1068  000370                     u300:
  1069  000370  0E01               	movlw	1
  1070  000372  6E1C               	movwf	___aldiv@counter^0,c
  1071  000374  EFC2  F001         	goto	l957
  1072  000378                     l955:
  1073  000378  90D8               	bcf	status,0,c
  1074  00037A  3618               	rlcf	___aldiv@divisor^0,f,c
  1075  00037C  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  1076  00037E  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  1077  000380  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  1078  000382  2A1C               	incf	___aldiv@counter^0,f,c
  1079  000384                     l957:
  1080  000384  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  1081  000386  EFC7  F001         	goto	u311
  1082  00038A  EFC9  F001         	goto	u310
  1083  00038E                     u311:
  1084  00038E  EFBC  F001         	goto	l955
  1085  000392                     u310:
  1086  000392                     l959:
  1087  000392  90D8               	bcf	status,0,c
  1088  000394  361E               	rlcf	___aldiv@quotient^0,f,c
  1089  000396  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  1090  000398  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  1091  00039A  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  1092  00039C  5018               	movf	___aldiv@divisor^0,w,c
  1093  00039E  5C14               	subwf	___aldiv@dividend^0,w,c
  1094  0003A0  5019               	movf	(___aldiv@divisor+1)^0,w,c
  1095  0003A2  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  1096  0003A4  501A               	movf	(___aldiv@divisor+2)^0,w,c
  1097  0003A6  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  1098  0003A8  501B               	movf	(___aldiv@divisor+3)^0,w,c
  1099  0003AA  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  1100  0003AC  A0D8               	btfss	status,0,c
  1101  0003AE  EFDB  F001         	goto	u321
  1102  0003B2  EFDD  F001         	goto	u320
  1103  0003B6                     u321:
  1104  0003B6  EFE6  F001         	goto	l967
  1105  0003BA                     u320:
  1106  0003BA  5018               	movf	___aldiv@divisor^0,w,c
  1107  0003BC  5E14               	subwf	___aldiv@dividend^0,f,c
  1108  0003BE  5019               	movf	(___aldiv@divisor+1)^0,w,c
  1109  0003C0  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  1110  0003C2  501A               	movf	(___aldiv@divisor+2)^0,w,c
  1111  0003C4  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  1112  0003C6  501B               	movf	(___aldiv@divisor+3)^0,w,c
  1113  0003C8  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  1114  0003CA  801E               	bsf	___aldiv@quotient^0,0,c
  1115  0003CC                     l967:
  1116  0003CC  90D8               	bcf	status,0,c
  1117  0003CE  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  1118  0003D0  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  1119  0003D2  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  1120  0003D4  3218               	rrcf	___aldiv@divisor^0,f,c
  1121  0003D6  2E1C               	decfsz	___aldiv@counter^0,f,c
  1122  0003D8  EFC9  F001         	goto	l959
  1123  0003DC                     l971:
  1124  0003DC  501D               	movf	___aldiv@sign^0,w,c
  1125  0003DE  B4D8               	btfsc	status,2,c
  1126  0003E0  EFF4  F001         	goto	u331
  1127  0003E4  EFF6  F001         	goto	u330
  1128  0003E8                     u331:
  1129  0003E8  EFFE  F001         	goto	l975
  1130  0003EC                     u330:
  1131  0003EC  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  1132  0003EE  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  1133  0003F0  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  1134  0003F2  6C1E               	negf	___aldiv@quotient^0,c
  1135  0003F4  0E00               	movlw	0
  1136  0003F6  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  1137  0003F8  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  1138  0003FA  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  1139  0003FC                     l975:
  1140  0003FC  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  1141  000400  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  1142  000404  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  1143  000408  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  1144  00040C  0012               	return		;funcret
  1145  00040E                     __end_of___aldiv:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _isr *****************
  1149 ;; Defined at:
  1150 ;;		line 77 in file "newmain.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1164 ;;      Params:         0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0
  1166 ;;      Temps:          7       0       0       0       0       0       0
  1167 ;;      Totals:         7       0       0       0       0       0       0
  1168 ;;Total ram usage:        7 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		Interrupt level 2
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	intcode
  1178  000008                     __pintcode:
  1179                           	callstack 0
  1180  000008                     _isr:
  1181                           	callstack 29
  1182                           
  1183                           ;incstack = 0
  1184  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1185  00000A  CFD9 F004          	movff	fsr2l,??_isr+3
  1186  00000E  CFDA F005          	movff	fsr2h,??_isr+4
  1187  000012  CFF3 F006          	movff	prodl,??_isr+5
  1188  000016  CFF4 F007          	movff	prodh,??_isr+6
  1189  00001A                     
  1190                           ;newmain.c: 78:     }
  1191  00001A  A4F2               	btfss	4082,2,c	;volatile
  1192  00001C  EF12  F000         	goto	i2u17_41
  1193  000020  EF14  F000         	goto	i2u17_40
  1194  000024                     i2u17_41:
  1195  000024  EF60  F000         	goto	i2l73
  1196  000028                     i2u17_40:
  1197  000028                     
  1198                           ;newmain.c: 79: 
  1199  000028  94F2               	bcf	4082,2,c	;volatile
  1200  00002A                     
  1201                           ;newmain.c: 80: 
  1202  00002A  0E00               	movlw	0
  1203  00002C  6ED7               	movwf	215,c	;volatile
  1204  00002E  0E06               	movlw	6
  1205  000030  6ED6               	movwf	214,c	;volatile
  1206                           
  1207                           ;newmain.c: 81: }
  1208  000032  0E00               	movlw	0
  1209  000034  6E80               	movwf	128,c	;volatile
  1210  000036  5041               	movf	_dig_cnt^0,w,c
  1211  000038  A4D8               	btfss	status,2,c
  1212  00003A  EF21  F000         	goto	i2u18_41
  1213  00003E  EF23  F000         	goto	i2u18_40
  1214  000042                     i2u18_41:
  1215  000042  EF27  F000         	goto	i2l887
  1216  000046                     i2u18_40:
  1217  000046  C04C  FF83         	movff	_seg_char+10,3971	;volatile
  1218  00004A  EF47  F000         	goto	i2l889
  1219  00004E                     i2l887:
  1220  00004E  0E37               	movlw	low _digits
  1221  000050  2441               	addwf	_dig_cnt^0,w,c
  1222  000052  6ED9               	movwf	fsr2l,c
  1223  000054  6ADA               	clrf	fsr2h,c
  1224  000056  0E00               	movlw	high _digits
  1225  000058  22DA               	addwfc	fsr2h,f,c
  1226  00005A  50DF               	movf	indf2,w,c
  1227  00005C  6E01               	movwf	??_isr^0,c
  1228  00005E  6A02               	clrf	(??_isr+1)^0,c
  1229  000060  0E42               	movlw	low _seg_char
  1230  000062  2401               	addwf	??_isr^0,w,c
  1231  000064  6ED9               	movwf	fsr2l,c
  1232  000066  0E00               	movlw	high _seg_char
  1233  000068  2002               	addwfc	(??_isr+1)^0,w,c
  1234  00006A  6EDA               	movwf	fsr2h,c
  1235  00006C  50DF               	movf	indf2,w,c
  1236  00006E  6E03               	movwf	(??_isr+2)^0,c
  1237  000070  0E02               	movlw	2
  1238  000072  1841               	xorwf	_dig_cnt^0,w,c
  1239  000074  B4D8               	btfsc	status,2,c
  1240  000076  EF3F  F000         	goto	i2u19_41
  1241  00007A  EF42  F000         	goto	i2u19_40
  1242  00007E                     i2u19_41:
  1243  00007E  0E01               	movlw	1
  1244  000080  EF43  F000         	goto	i2u20_40
  1245  000084                     i2u19_40:
  1246  000084  0E00               	movlw	0
  1247  000086                     i2u20_40:
  1248  000086  0D80               	mullw	-128
  1249  000088  50F3               	movf	243,w,c
  1250  00008A  2403               	addwf	(??_isr+2)^0,w,c
  1251  00008C  6E83               	movwf	131,c	;volatile
  1252  00008E                     i2l889:
  1253  00008E  C041  F001         	movff	_dig_cnt,??_isr
  1254  000092  0E01               	movlw	1
  1255  000094  6E02               	movwf	(??_isr+1)^0,c
  1256  000096  2A01               	incf	??_isr^0,f,c
  1257  000098  EF50  F000         	goto	i2u21_44
  1258  00009C                     i2u21_45:
  1259  00009C  90D8               	bcf	status,0,c
  1260  00009E  3602               	rlcf	(??_isr+1)^0,f,c
  1261  0000A0                     i2u21_44:
  1262  0000A0  2E01               	decfsz	??_isr^0,f,c
  1263  0000A2  EF4E  F000         	goto	i2u21_45
  1264  0000A6  5002               	movf	(??_isr+1)^0,w,c
  1265  0000A8  6E80               	movwf	128,c	;volatile
  1266  0000AA  2A41               	incf	_dig_cnt^0,f,c
  1267  0000AC  0E03               	movlw	3
  1268  0000AE  6441               	cpfsgt	_dig_cnt^0,c
  1269  0000B0  EF5C  F000         	goto	i2u22_41
  1270  0000B4  EF5E  F000         	goto	i2u22_40
  1271  0000B8                     i2u22_41:
  1272  0000B8  EF60  F000         	goto	i2l73
  1273  0000BC                     i2u22_40:
  1274  0000BC  0E00               	movlw	0
  1275  0000BE  6E41               	movwf	_dig_cnt^0,c
  1276  0000C0                     i2l73:
  1277  0000C0  C007  FFF4         	movff	??_isr+6,prodh
  1278  0000C4  C006  FFF3         	movff	??_isr+5,prodl
  1279  0000C8  C005  FFDA         	movff	??_isr+4,fsr2h
  1280  0000CC  C004  FFD9         	movff	??_isr+3,fsr2l
  1281  0000D0  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1282  0000D2  0011               	retfie		f
  1283  0000D4                     __end_of_isr:
  1284                           	callstack 0
  1285  0000                     
  1286                           	psect	rparam
  1287  0000                     
  1288                           	psect	temp
  1289  00004D                     btemp:
  1290                           	callstack 0
  1291  00004D                     	ds	1
  1292  0000                     int$flags	set	btemp
  1293  0000                     wtemp8	set	btemp+1
  1294  0000                     ttemp5	set	btemp+1
  1295  0000                     ttemp6	set	btemp+4
  1296  0000                     ttemp7	set	btemp+8
  1297                           
  1298                           	psect	idloc
  1299                           
  1300                           ;Config register IDLOC0 @ 0x200000
  1301                           ;	unspecified, using default values
  1302  200000                     	org	2097152
  1303  200000  FF                 	db	255
  1304                           
  1305                           ;Config register IDLOC1 @ 0x200001
  1306                           ;	unspecified, using default values
  1307  200001                     	org	2097153
  1308  200001  FF                 	db	255
  1309                           
  1310                           ;Config register IDLOC2 @ 0x200002
  1311                           ;	unspecified, using default values
  1312  200002                     	org	2097154
  1313  200002  FF                 	db	255
  1314                           
  1315                           ;Config register IDLOC3 @ 0x200003
  1316                           ;	unspecified, using default values
  1317  200003                     	org	2097155
  1318  200003  FF                 	db	255
  1319                           
  1320                           ;Config register IDLOC4 @ 0x200004
  1321                           ;	unspecified, using default values
  1322  200004                     	org	2097156
  1323  200004  FF                 	db	255
  1324                           
  1325                           ;Config register IDLOC5 @ 0x200005
  1326                           ;	unspecified, using default values
  1327  200005                     	org	2097157
  1328  200005  FF                 	db	255
  1329                           
  1330                           ;Config register IDLOC6 @ 0x200006
  1331                           ;	unspecified, using default values
  1332  200006                     	org	2097158
  1333  200006  FF                 	db	255
  1334                           
  1335                           ;Config register IDLOC7 @ 0x200007
  1336                           ;	unspecified, using default values
  1337  200007                     	org	2097159
  1338  200007  FF                 	db	255
  1339                           
  1340                           	psect	config
  1341                           
  1342                           ; Padding undefined space
  1343  300000                     	org	3145728
  1344  300000  FF                 	db	255
  1345                           
  1346                           ;Config register CONFIG1H @ 0x300001
  1347                           ;	Oscillator Selection bits
  1348                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  1349                           ;	4X PLL Enable
  1350                           ;	PLLCFG = 0x0, unprogrammed default
  1351                           ;	Primary clock enable bit
  1352                           ;	PRICLKEN = 0x1, unprogrammed default
  1353                           ;	Fail-Safe Clock Monitor Enable bit
  1354                           ;	FCMEN = 0x0, unprogrammed default
  1355                           ;	Internal/External Oscillator Switchover bit
  1356                           ;	IESO = 0x0, unprogrammed default
  1357  300001                     	org	3145729
  1358  300001  22                 	db	34
  1359                           
  1360                           ;Config register CONFIG2L @ 0x300002
  1361                           ;	unspecified, using default values
  1362                           ;	Power-up Timer Enable bit
  1363                           ;	PWRTEN = 0x1, unprogrammed default
  1364                           ;	Brown-out Reset Enable bits
  1365                           ;	BOREN = 0x3, unprogrammed default
  1366                           ;	Brown Out Reset Voltage bits
  1367                           ;	BORV = 0x3, unprogrammed default
  1368  300002                     	org	3145730
  1369  300002  1F                 	db	31
  1370                           
  1371                           ;Config register CONFIG2H @ 0x300003
  1372                           ;	Watchdog Timer Enable bits
  1373                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1374                           ;	Watchdog Timer Postscale Select bits
  1375                           ;	WDTPS = 0xF, unprogrammed default
  1376  300003                     	org	3145731
  1377  300003  3C                 	db	60
  1378                           
  1379                           ; Padding undefined space
  1380  300004                     	org	3145732
  1381  300004  FF                 	db	255
  1382                           
  1383                           ;Config register CONFIG3H @ 0x300005
  1384                           ;	unspecified, using default values
  1385                           ;	CCP2 MUX bit
  1386                           ;	CCP2MX = 0x1, unprogrammed default
  1387                           ;	PORTB A/D Enable bit
  1388                           ;	PBADEN = 0x1, unprogrammed default
  1389                           ;	P3A/CCP3 Mux bit
  1390                           ;	CCP3MX = 0x1, unprogrammed default
  1391                           ;	HFINTOSC Fast Start-up
  1392                           ;	HFOFST = 0x1, unprogrammed default
  1393                           ;	Timer3 Clock input mux bit
  1394                           ;	T3CMX = 0x1, unprogrammed default
  1395                           ;	ECCP2 B output mux bit
  1396                           ;	P2BMX = 0x1, unprogrammed default
  1397                           ;	MCLR Pin Enable bit
  1398                           ;	MCLRE = 0x1, unprogrammed default
  1399  300005                     	org	3145733
  1400  300005  BF                 	db	191
  1401                           
  1402                           ;Config register CONFIG4L @ 0x300006
  1403                           ;	unspecified, using default values
  1404                           ;	Stack Full/Underflow Reset Enable bit
  1405                           ;	STVREN = 0x1, unprogrammed default
  1406                           ;	Single-Supply ICSP Enable bit
  1407                           ;	LVP = 0x1, unprogrammed default
  1408                           ;	Extended Instruction Set Enable bit
  1409                           ;	XINST = 0x0, unprogrammed default
  1410                           ;	Background Debug
  1411                           ;	DEBUG = 0x1, unprogrammed default
  1412  300006                     	org	3145734
  1413  300006  85                 	db	133
  1414                           
  1415                           ; Padding undefined space
  1416  300007                     	org	3145735
  1417  300007  FF                 	db	255
  1418                           
  1419                           ;Config register CONFIG5L @ 0x300008
  1420                           ;	unspecified, using default values
  1421                           ;	Code Protection Block 0
  1422                           ;	CP0 = 0x1, unprogrammed default
  1423                           ;	Code Protection Block 1
  1424                           ;	CP1 = 0x1, unprogrammed default
  1425                           ;	Code Protection Block 2
  1426                           ;	CP2 = 0x1, unprogrammed default
  1427                           ;	Code Protection Block 3
  1428                           ;	CP3 = 0x1, unprogrammed default
  1429  300008                     	org	3145736
  1430  300008  0F                 	db	15
  1431                           
  1432                           ;Config register CONFIG5H @ 0x300009
  1433                           ;	unspecified, using default values
  1434                           ;	Boot Block Code Protection bit
  1435                           ;	CPB = 0x1, unprogrammed default
  1436                           ;	Data EEPROM Code Protection bit
  1437                           ;	CPD = 0x1, unprogrammed default
  1438  300009                     	org	3145737
  1439  300009  C0                 	db	192
  1440                           
  1441                           ;Config register CONFIG6L @ 0x30000A
  1442                           ;	unspecified, using default values
  1443                           ;	Write Protection Block 0
  1444                           ;	WRT0 = 0x1, unprogrammed default
  1445                           ;	Write Protection Block 1
  1446                           ;	WRT1 = 0x1, unprogrammed default
  1447                           ;	Write Protection Block 2
  1448                           ;	WRT2 = 0x1, unprogrammed default
  1449                           ;	Write Protection Block 3
  1450                           ;	WRT3 = 0x1, unprogrammed default
  1451  30000A                     	org	3145738
  1452  30000A  0F                 	db	15
  1453                           
  1454                           ;Config register CONFIG6H @ 0x30000B
  1455                           ;	unspecified, using default values
  1456                           ;	Configuration Register Write Protection bit
  1457                           ;	WRTC = 0x1, unprogrammed default
  1458                           ;	Boot Block Write Protection bit
  1459                           ;	WRTB = 0x1, unprogrammed default
  1460                           ;	Data EEPROM Write Protection bit
  1461                           ;	WRTD = 0x1, unprogrammed default
  1462  30000B                     	org	3145739
  1463  30000B  E0                 	db	224
  1464                           
  1465                           ;Config register CONFIG7L @ 0x30000C
  1466                           ;	unspecified, using default values
  1467                           ;	Table Read Protection Block 0
  1468                           ;	EBTR0 = 0x1, unprogrammed default
  1469                           ;	Table Read Protection Block 1
  1470                           ;	EBTR1 = 0x1, unprogrammed default
  1471                           ;	Table Read Protection Block 2
  1472                           ;	EBTR2 = 0x1, unprogrammed default
  1473                           ;	Table Read Protection Block 3
  1474                           ;	EBTR3 = 0x1, unprogrammed default
  1475  30000C                     	org	3145740
  1476  30000C  0F                 	db	15
  1477                           
  1478                           ;Config register CONFIG7H @ 0x30000D
  1479                           ;	unspecified, using default values
  1480                           ;	Boot Block Table Read Protection bit
  1481                           ;	EBTRB = 0x1, unprogrammed default
  1482  30000D                     	org	3145741
  1483  30000D  40                 	db	64
  1484                           tosu	equ	0xFFF
  1485                           tosh	equ	0xFFE
  1486                           tosl	equ	0xFFD
  1487                           stkptr	equ	0xFFC
  1488                           pclatu	equ	0xFFB
  1489                           pclath	equ	0xFFA
  1490                           pcl	equ	0xFF9
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           prodh	equ	0xFF4
  1496                           prodl	equ	0xFF3
  1497                           indf0	equ	0xFEF
  1498                           postinc0	equ	0xFEE
  1499                           postdec0	equ	0xFED
  1500                           preinc0	equ	0xFEC
  1501                           plusw0	equ	0xFEB
  1502                           fsr0h	equ	0xFEA
  1503                           fsr0l	equ	0xFE9
  1504                           wreg	equ	0xFE8
  1505                           indf1	equ	0xFE7
  1506                           postinc1	equ	0xFE6
  1507                           postdec1	equ	0xFE5
  1508                           preinc1	equ	0xFE4
  1509                           plusw1	equ	0xFE3
  1510                           fsr1h	equ	0xFE2
  1511                           fsr1l	equ	0xFE1
  1512                           bsr	equ	0xFE0
  1513                           indf2	equ	0xFDF
  1514                           postinc2	equ	0xFDE
  1515                           postdec2	equ	0xFDD
  1516                           preinc2	equ	0xFDC
  1517                           plusw2	equ	0xFDB
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      76
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv
    ___lldiv->___wmul
    ___aldiv->___lmul

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    12      5    2214
                                             33 COMRAM    17    12      5
                            ___aldiv
                            ___lldiv
                            ___llmod
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              7 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              7 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                             13 COMRAM    13     5      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             19 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___lldiv
     ___wmul (ARG)
   ___llmod
   ___lmul
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C       9        0.0%
DATA                 0      0      4C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 25 10:04:28 2021

                     l76 05FE                       l87 0592                       l88 05A2  
    ___wmul@multiplicand 000A                      l110 04B0                      l103 04A0  
                    l155 040C                      l503 0538                      l911 0572  
                    l903 053A                      l496 0528                      l921 0448  
                    l913 040E                      l905 054A                      l931 0490  
                    l923 0456                      l915 041E                      l907 0558  
                    l941 0324                      l933 049A                      l925 0460  
                    l917 0434                      l909 0568                      l951 035A  
                    l943 0328                      l935 0302                      l927 047E  
                    l919 043C                      l961 039C                      l953 0370  
                    l945 0336                      l937 0306                      l929 048E  
                    l963 03BA                      l955 0378                      l971 03DC  
                    l947 0346                      l939 0314                      l973 03EC  
                    l965 03CA                      l957 0384                      l949 034A  
                    l981 04C8                      l975 03FC                      l967 03CC  
                    l959 0392                      l991 0518                      l983 04D0  
                    l969 03D6                      l993 0522                      l985 04DC  
                    l897 05DA                      l987 04EA                      l979 04B2  
                    l899 05F6                      l995 00D8                      _GIE 007F97  
                    l989 0508                      l997 010E                      l999 0110  
                    u300 0370                      u301 036C                      u310 0392  
                    u230 0558                      u311 038E                      u231 0554  
                    u320 03BA                      u240 0592                      u321 03B6  
                    u241 058E                      u330 03EC                      u250 0434  
                    u331 03E8                      u251 0430                      u260 0456  
                    u340 04C8                      u261 0452                      u341 04C4  
                    u270 047E                      u350 04EA                      u271 047A  
                    u351 04E6                      u280 0314                      u360 0508  
                    u281 0310                      u361 0504                      u290 0336  
                    u370 0126                      u291 0332                      u371 0122  
                    u380 01B2                      u381 01AE                      _cnt 003D  
                    _isr 0008                      wreg 000FE8                     l1001 0112  
                   l1011 0140                     l1003 0114                     l1021 01EA  
                   l1013 0142                     l1005 0116                     l1023 023E  
                   l1015 0196                     l1007 0118                     l1025 02D2  
                   l1017 01B2                     l1009 0126                     l1019 01C2  
                   ?_isr 0001                     _PEIE 007F96                     i2l73 00C0  
                   _TMR0 000FD6                     _cnt2 003B                     _main 00D8  
                   _temp 0033                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 004D  
                   prodh 000FF4                     prodl 000FF3                     start 00D4  
           ___param_bank 000000                    ??_isr 0001          __end_of___aldiv 040E  
                  ?_main 0022          __end_of___lldiv 04B2                    _T0CON 000FD5  
        __end_of___llmod 053A                    i2l881 0028                    i2l891 00AA  
                  i2l883 002A                    i2l893 00AC                    i2l885 0046  
                  i2l895 00BC                    i2l887 004E                    i2l879 001A  
                  i2l889 008E                    _PORTA 000F80                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 000C                    tablat 000FF5                    ttemp5 004E  
                  ttemp6 0051                    ttemp7 0055                    status 000FD8  
                  wtemp8 004E          __initialization 05A4             __end_of_main 0302  
                 ??_main 0027            __activetblptr 000000                   _ADCON1 000FC1  
                 _ADCON2 000FC0         ___llmod@dividend 0008                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELA 000F38                   _ANSELD 000F3B  
                 _ANSELE 000F3C                   _GODONE 007E11                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   ___lmul 053A                ??___aldiv 001C  
                 ___wmul 05DA                   _analog 003F                ??___lldiv 0016  
              ??___llmod 0010                   _digits 0037                   clear_0 05CA  
                 isa$std 000001             __pdataCOMRAM 0042                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 05D0            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?___lmul 0008                  ?___wmul 0008           ___lmul@product 0010  
                i2u20_40 0086                  i2u21_44 00A0                  i2u21_45 009C  
                i2u22_40 00BC                  i2u22_41 00B8                  i2u17_40 0028  
                i2u17_41 0024                  i2u18_40 0046                  i2u18_41 0042  
                i2u19_40 0084                  i2u19_41 007E                  __Hparam 0000  
                __Lparam 0000                  ___aldiv 0302          __size_of___lmul 006A  
                ___lldiv 040E          __size_of___wmul 0026                  ___llmod 04B2  
                __pcinit 05A4                  _dig_cnt 0041                  __ramtop 0600  
                __ptext0 00D8                  __ptext1 05DA                  __ptext2 053A  
                __ptext3 04B2                  __ptext4 040E                  __ptext5 0302  
           __size_of_isr 00CC         ___aldiv@dividend 0014     end_of_initialization 05D0  
        ___lldiv@divisor 0012          ___lldiv@counter 001A         ___aldiv@quotient 001E  
                postdec1 000FE5                  postinc0 000FEE           __end_of___lmul 05A4  
         __end_of___wmul 0600            __pidataCOMRAM 0600      start_initialization 05A4  
            __end_of_isr 00D4          ___llmod@divisor 000C          ___llmod@counter 0010  
               ??___lmul 0010                 ??___wmul 000C              __pbssCOMRAM 0033  
              __pintcode 0008                 ?___aldiv 0014                 ?___lldiv 000E  
               ?___llmod 0008          ___aldiv@divisor 0018          ___aldiv@counter 001C  
         ___wmul@product 000C               _ADCON0bits 000FC2        ___wmul@multiplier 0008  
      ___lmul@multiplier 0008                copy_data0 05B8                 __Hrparam 0000  
               __Lrparam 0000         __size_of___aldiv 010C         __size_of___lldiv 00A4  
       __size_of___llmod 0088            __size_of_main 022A                 _seg_char 0042  
               isa$xinst 000000                 int$flags 004D                 main@argc 0022  
               main@argv 0024                 intlevel2 0000         ___lldiv@dividend 000E  
       ___lldiv@quotient 0016             ___aldiv@sign 001D  
